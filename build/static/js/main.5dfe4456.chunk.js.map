{"version":3,"sources":["serviceWorkerRegistration.js","apiServices/PokemonService.js","styles/globalStyles.js","components/PokemonCard.js","components/PokemonList.js","components/StaticsPanel.js","components/Details.js","images/logo.svg","images/back_arrow.svg","components/Navbar.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","PokemonService","baseUrl","axios","get","this","res","data","pokemon","index","screen","PokemonCard","props","Card","to","link","alt","name","src","image","styled","Link","PokemonList","useTranslation","t","useState","pokemons","setPokemons","pokemonService","searchTerm","setSearchTerm","pagination","setPagination","paginationNumber","setPaginationNumber","generatePokemons","results","forEach","a","fetch","json","currentList","sort","b","id","nextPokemons","direction","useEffect","getAnotherPokemons","getAllPokemons","Grid","className","type","placeholder","onChange","e","target","value","filter","toLowerCase","includes","map","sprites","other","dream_world","front_default","Pagination","onClick","div","StaticsPanel","statisticsData","details","stat","hp","barColor","attack","defense","speed","spatk","spdef","StatisticsPanelStyles","style","width","Details","useParams","setPokemon","getAPokemon","onePokemon","DetailsStyle","length","height","weight","description","stats","base_stat","Navbar","i18n","useLocation","Nav","pathname","StyledLink","back_arrow","logo","changeLanguage","selected","App","path","exact","i18next","init","interpolation","escapeValue","lng","resources","es","global","global_es","en","global_en","de","global_de","ReactDOM","render","StrictMode","I18nextProvider","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5dfe4456.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\r\n\r\nexport class PokemonService {\r\n\r\n    baseUrl = 'https://pokeapi.co/api/v2/pokemon'\r\n\r\n    getAllPokemons() {\r\n        return axios.get(this.baseUrl + '?limit=50&offset=0')\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getAPokemon(pokemon) {\r\n        return axios.get(this.baseUrl + `/${pokemon}`)\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getAnotherPokemons(index) {\r\n        return axios.get(this.baseUrl + `?limit=50&offset=${index}`)\r\n            .then(res => res.data);\r\n    }\r\n}","export const screen = {\r\n    xs: '@media(max-width: 319px)',\r\n    sm: '@media(min-width: 320px)',\r\n    md: '@media(min-width: 568px)',\r\n    lg: '@media(min-width: 1024px)',\r\n    xl: '@media(min-width: 1920px)'\r\n}","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { screen } from \"../styles/globalStyles\"\r\n\r\nconst PokemonCard = (props) => {\r\n\r\n    return (\r\n        <Card to={`/pokemon/${props.link}`}>\r\n            <img alt={props.name} src={props.image} />\r\n            <h2>{props.name}</h2>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PokemonCard;\r\n\r\nexport const Card = styled(Link)`\r\n    \r\n    text-decoration: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 1rem;\r\n    background-color: #ffffff;\r\n    box-shadow: 2px 2px 5px #999;\r\n    width: 5rem;\r\n    height: 5.2rem;\r\n    margin: 0.5rem;\r\n    transition: 0.7s;\r\n    :hover{\r\n        -webkit-transform:scale(1.2);\r\n        transform:scale(1.2);\r\n    }\r\n\r\n    img{\r\n        width: 2.5rem;\r\n        height: 2.5rem;\r\n        object-fit: contain;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    h2{\r\n        font-weight: 100;\r\n        font-size: 13px;\r\n        text-transform: capitalize;\r\n        color: #000000;\r\n    }\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n\r\n    ${screen.md}{\r\n        width: 6rem;\r\n        height: 6rem;\r\n        padding: 2rem;\r\n        img {\r\n            width: 5rem;\r\n            height: 5rem;\r\n            object-fit: contain;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        h2{\r\n            font-size: 20px;\r\n        }\r\n    }\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\nimport { PokemonService } from '../apiServices/PokemonService'\r\nimport PokemonCard from '../components/PokemonCard'\r\nimport { screen } from \"../styles/globalStyles\"\r\n\r\nconst PokemonList = () => {\r\n\r\n    const [t, i18n] = useTranslation(\"global\");\r\n\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const pokemonService = new PokemonService();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [pagination, setPagination] = useState(0);\r\n    const [paginationNumber, setPaginationNumber] = useState(1);\r\n\r\n    useEffect(() => {\r\n\r\n        setPokemons([]);\r\n        if (pagination > 0) {\r\n            pokemonService.getAnotherPokemons(pagination).then((data) => generatePokemons(data.results));\r\n        } else {\r\n            pokemonService.getAllPokemons().then((data) => generatePokemons(data.results));\r\n        }\r\n\r\n    }, [pagination])\r\n\r\n    function generatePokemons(results) {\r\n        results.forEach(async pokemon => {\r\n            const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\r\n            const data = await res.json();\r\n            setPokemons(currentList => [...currentList, data]);\r\n            await pokemons.sort((a, b) => a.id - b.id);\r\n        })\r\n    }\r\n\r\n    function nextPokemons(direction) {\r\n        console.log(direction);\r\n        if (direction === \"more\" && pagination >= 0) {\r\n            setPagination(pagination + 50)\r\n            setPaginationNumber(paginationNumber + 1)\r\n        } else if (direction === \"less\" && pagination >= 50) {\r\n            setPagination(pagination - 50)\r\n            setPaginationNumber(paginationNumber - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <div className='search_box'>\r\n                    <input type=\"text\" placeholder={t(\"pokemonList.search\")} className='bar' onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n                {pokemons.filter(pokemon => {\r\n                    if (searchTerm == '') {\r\n                        return pokemon;\r\n                    } else if (pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()) || pokemon.id == searchTerm) {\r\n                        return pokemon;\r\n                    }\r\n                }).map((pokemon, index) =>\r\n                    <PokemonCard\r\n                        key={index}\r\n                        name={pokemon.name}\r\n                        image={pokemon.sprites.other.dream_world.front_default}\r\n                        link={pokemon.id}\r\n                    />\r\n                )}\r\n\r\n            </Grid>\r\n\r\n            <Pagination>\r\n                <button\r\n                    className=\"navButton\"\r\n                    onClick={() => nextPokemons(\"less\")}>\r\n                    {t(\"pokemonList.lastPage\")}\r\n                </button>\r\n                <div>\r\n                    <span className=\"paginationNumber\">\r\n                        {paginationNumber > 1 ? paginationNumber - 1 : null}\r\n                    </span>\r\n                    <span className=\"paginationNumber actualNumber\">\r\n                        {paginationNumber}\r\n                    </span>\r\n                    <span className=\"paginationNumber\">\r\n                        {paginationNumber + 1}\r\n                    </span>\r\n                </div>\r\n                <button\r\n                    className=\"navButton\"\r\n                    onClick={() => nextPokemons(\"more\")}>\r\n                    {t(\"pokemonList.nextPage\")}\r\n                </button>\r\n            </Pagination>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PokemonList;\r\n\r\nexport const Grid = styled.div`\r\n    \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    background-color: #f4f4f4;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n\r\n    .search_box {\r\n        display: flex;\r\n        border-radius: 6px;\r\n        height: 2rem;\r\n        width: 100%;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: 2rem 0;\r\n        padding: 0 1rem;\r\n    }\r\n\r\n    .bar {\r\n        display: flex;\r\n        border-radius: 5px;\r\n        height: 2rem;\r\n        width: 100%;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    ${screen.md}{\r\n        padding: 1rem 3rem;\r\n        .search_box {\r\n            padding: 0 3.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nconst Pagination = styled.div`\r\n\r\n    display: flex;\r\n    height: 2rem;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin: 3rem 0;\r\n\r\n    & .navButton{\r\n        width: 30%;\r\n        height: 1.5rem;\r\n        border: black solid black;\r\n        background-color: blue;\r\n        color: white;\r\n        box-shadow: 2px 2px 5px #999;\r\n        border-radius: 0.5rem;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .paginationNumber{\r\n        margin: 1rem;\r\n        font-weight: 100;\r\n        color: blue;\r\n\r\n    }\r\n\r\n    .actualNumber{\r\n        font-weight: bold;\r\n        font-size: 25px;\r\n    }\r\n\r\n    ${screen.md}{\r\n        & .navButton{\r\n            width: 15%;\r\n            height: 2rem;\r\n            font-size: 15px;\r\n        }\r\n    }\r\n`","import styled from 'styled-components';\r\nimport { screen } from \"../styles/globalStyles\"\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst StaticsPanel = (props) => {\r\n\r\n    const [t, i18n] = useTranslation(\"global\");\r\n    const statisticsData = [\r\n        { details: \"details.hp\", stat: props.hp, barColor: \"blue\" },\r\n        { details: \"details.attack\", stat: props.attack, barColor: \"orange\" },\r\n        { details: \"details.defense\", stat: props.defense, barColor: \"green\" },\r\n        { details: \"details.speed\", stat: props.speed, barColor: \"blue\" },\r\n        { details: \"details.spatk\", stat: props.spatk, barColor: \"orange\" },\r\n        { details: \"details.spdf\", stat: props.spdef, barColor: \"green\" }\r\n    ]\r\n\r\n    return (\r\n        <StatisticsPanelStyles>\r\n\r\n            <h3>{t(\"details.statistics\")}</h3>\r\n            <hr className='decorationLine' />\r\n            {statisticsData.map(stat =>\r\n                <div className='stat'>\r\n                    <h4>{t(stat.details)}</h4>\r\n                    <div className={`progress-bar ${stat.barColor} stripes shine`}>\r\n                        <span style={{ width: stat.stat }}>\r\n                            <div className='number'>{stat.stat}</div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </StatisticsPanelStyles>\r\n    )\r\n}\r\n\r\nexport default StaticsPanel;\r\n\r\nexport const StatisticsPanelStyles = styled.div`\r\n\r\n    margin: 3rem 0;\r\n\r\n    .decorationLine{\r\n        color: gray;\r\n    }\r\n\r\n    .stat{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        & h4 {\r\n            font-weight: bold;\r\n            margin-right: 3rem;\r\n        }\r\n    }\r\n    \r\n    .number{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-top: 1px;\r\n    }\r\n\r\n    h3{\r\n        text-align: center;\r\n        color: gray;\r\n        letter-spacing: 8px;\r\n    }\r\n\r\n    .progress-bar {\r\n        background-color: #1a1a1a;\r\n        height: 20px;\r\n        padding: 3px;\r\n        width: 150px;\r\n        margin: 10px 0;         \r\n        border-radius: 5px;\r\n        box-shadow: 0 1px 5px #000 inset, 0 1px 0 #444;           \r\n    }\r\n\r\n    .progress-bar span {\r\n        display: inline-block;\r\n        height: 100%;\r\n        border-radius: 3px;\r\n        box-shadow: 0 1px 0 rgba(255, 255, 255, .5) inset;\r\n        transition: width .4s ease-in-out; \r\n        background-color: #ccc;   \r\n    }\r\n\r\n    /**** GRADIENTS ****/\r\n    .blue span {\r\n        background-color: #34c2e3;   \r\n    }\r\n\r\n    .orange span {\r\n        background-color: #fecf23;\r\n        background-image: linear-gradient(top, #fecf23, #fd9215);  \r\n    }   \r\n\r\n    .green span {\r\n        background-color: #a5df41;\r\n        background-image: linear-gradient(top, #a5df41, #4ca916);  \r\n    }\r\n\r\n    /**** STRIPES ****/\r\n    .stripes span {\r\n        background-size: 30px 30px;\r\n        background-image: linear-gradient(135deg, rgba(255, 255, 255, .15) 25%, transparent 25%,\r\n            transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%,\r\n            transparent 75%, transparent);            \r\n\r\n        animation: animate-stripes 3s linear infinite;             \r\n    }\r\n\r\n    @keyframes animate-stripes {\r\n        0% {background-position: 0 0;} 100% {background-position: 60px 0;}\r\n    }\r\n\r\n    /**** SHINE ****/\r\n    .shine span {\r\n        position: relative;\r\n    }\r\n\r\n    .shine span::after {\r\n        content: '';\r\n        opacity: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background: #fff;\r\n        border-radius: 3px;\r\n        animation: animate-shine 2s ease-out infinite;             \r\n    }\r\n\r\n    @keyframes animate-shine {\r\n        0% {opacity: 0; width: 0;}\r\n        50% {opacity: .5;}\r\n        100% {opacity: 0; width: 95%;}\r\n    }\r\n\r\n    /**** GLOW ****/\r\n    .glow span {\r\n        box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, 0 -5px 5px rgba(255, 255, 255, .7) inset;    \r\n        animation: animate-glow 1s ease-out infinite;          \r\n    }\r\n\r\n    @keyframes animate-glow {\r\n        0% { box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, 0 -5px 5px rgba(255, 255, 255, .7) inset;} \r\n        50% { box-shadow: 0 5px 5px rgba(255, 255, 255, .3) inset, 0 -5px 5px rgba(255, 255, 255, .3) inset;} \r\n        100% { box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, 0 -5px 5px rgba(255, 255, 255, .7) inset;}\r\n    }\r\n\r\n    ${screen.md}{\r\n        .progress-bar {\r\n            width: 350px;\r\n        }\r\n    }\r\n`","import { useParams } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport StaticsPanel from './StaticsPanel';\r\nimport { useEffect, useState } from 'react';\r\nimport { PokemonService } from '../apiServices/PokemonService';\r\nimport { screen } from \"../styles/globalStyles\"\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Details = () => {\r\n\r\n    const [t, i18n] = useTranslation(\"global\");\r\n    let { id } = useParams();\r\n    const pokemonService = new PokemonService();\r\n    const [pokemon, setPokemon] = useState();\r\n\r\n    useEffect(() => {\r\n        pokemonService.getAPokemon(id).then((onePokemon) => setPokemon(onePokemon))\r\n    }, [])\r\n\r\n    return (\r\n        <DetailsStyle>\r\n            {pokemon != null && <div>\r\n                <div className='info'>\r\n                    <img alt={pokemon.name}\r\n                        src={pokemon.sprites.other.dream_world.front_default} />\r\n                    <div className='text'>\r\n                        <span>{id.length === 1 ? '#00' + id : '#0' + id}</span>\r\n                        <h2>{pokemon.name}</h2>\r\n                        <h3>{t(\"details.height\")}: <span>{pokemon.height + \" m\"}</span></h3>\r\n                        <h3>{t(\"details.weight\")}: <span>{pokemon.weight + \" kg\"}</span></h3>\r\n                    </div>\r\n                </div>\r\n                <p>{pokemon.description}</p>\r\n                <StaticsPanel\r\n                    hp={pokemon.stats[0].base_stat}\r\n                    attack={pokemon.stats[1].base_stat}\r\n                    defense={pokemon.stats[2].base_stat}\r\n                    speed={pokemon.stats[3].base_stat}\r\n                    spatk={pokemon.stats[4].base_stat}\r\n                    spdef={pokemon.stats[5].base_stat}\r\n                />\r\n            </div>\r\n            }\r\n        </DetailsStyle>\r\n    )\r\n}\r\n\r\nexport default Details;\r\n\r\nexport const DetailsStyle = styled.div`\r\n    \r\n    text-decoration: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3rem 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    p{\r\n        text-align:center;\r\n    }\r\n\r\n    .info{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        margin-left: -1rem;\r\n        margin-right: -1rem;\r\n        & img {\r\n            width: 10rem;\r\n            height: 10rem;\r\n            object-fit: contain;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n\r\n    .text {\r\n\r\n        & h2 {\r\n            text-transform: capitalize;\r\n            color: #000000;\r\n         }\r\n    }   \r\n\r\n    ${screen.md}{\r\n\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.17b2d8c1.svg\";","export default __webpack_public_path__ + \"static/media/back_arrow.349bf619.svg\";","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport logo from '../images/logo.svg'\r\nimport back_arrow from '../images/back_arrow.svg'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\r\n    const [t, i18n] = useTranslation(\"global\");\r\n    let location = useLocation();\r\n    \r\n    return (\r\n        <Nav>\r\n            {\r\n                location.pathname == \"/\" ? null : <StyledLink to='/'><img src={back_arrow} />{t(\"pokemonList.back\")}</StyledLink>\r\n            }\r\n            <img src={logo} alt=\"Pokemon Logo\" />\r\n            <select onChange={(e) => i18n.changeLanguage(e.target.value)}>\r\n                <option value=\"en\" selected>EN</option>\r\n                <option value=\"es\">ES</option>\r\n                <option value=\"de\">DE</option>\r\n            </select>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\nexport const Nav = styled.div`\r\n    background-color: red;\r\n    align-items: center;\r\n    text-align: center;\r\n    padding: 1rem 0;\r\n    img{\r\n        width: 30%;\r\n        height: 30%;\r\n\r\n    }\r\n    select{\r\n        background: linear-gradient(70deg, gray, white);\r\n        border: none;\r\n        font-size: 14px;\r\n        color: black;\r\n        height: 30px;\r\n        padding: 5px;\r\n        display: flex;\r\n        top: 0;\r\n        right: 0;\r\n        position: absolute;\r\n        margin: 1rem;\r\n        border-radius: 4px;\r\n    }\r\n`\r\nexport const StyledLink = styled(Link)`\r\n        display: flex;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 1rem;\r\n        position: absolute;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-decoration: none;\r\n        color: white;\r\n        img{\r\n            width: 40px;\r\n            height: 40px;\r\n        }\r\n`\r\n\r\n","import {\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport PokemonList from \"./components/PokemonList\"\nimport Details from './components/Details'\nimport Navbar from './components/Navbar'\n\nconst App = () => {\n\n  return (\n    <div>\n      <Navbar />\n      <Switch>\n        <Route path=\"/pokemon/:id\">\n          <Details />\n        </Route>\n        <Route path=\"/\" exact>\n          <PokemonList />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport App from './App';\r\nimport './global.css';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\n\r\nimport global_es from \"./translations/es/global.json\";\r\nimport global_en from \"./translations/en/global.json\";\r\nimport global_de from \"./translations/de/global.json\";\r\n\r\ni18next.init({\r\n  interpolation: { escapeValue: false },\r\n  lng: \"en\",\r\n  resources: {\r\n    es: {\r\n      global: global_es\r\n    },\r\n    en: {\r\n      global: global_en\r\n    },\r\n    de: {\r\n      global: global_de\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <I18nextProvider i18n={i18next}>\r\n        <App />\r\n      </I18nextProvider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}